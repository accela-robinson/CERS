//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.11.27 at 08:59:47 PM CST 
//


package com.accela.cers.cap.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for SubmittalActionType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="SubmittalActionType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Draft"/>
 *     &lt;enumeration value="Submitted"/>
 *     &lt;enumeration value="Under Review"/>
 *     &lt;enumeration value="Accepted"/>
 *     &lt;enumeration value="Not Accepted"/>
 *     &lt;enumeration value="Not Applicable"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "SubmittalActionType")
@XmlEnum
public enum SubmittalActionType {


    /**
     * Draft is not a valid Status when submitted to the Production EDT endpoint. This is for seeding endpoints only.
     * 
     */
    @XmlEnumValue("Draft")
    DRAFT("Draft"),
    @XmlEnumValue("Submitted")
    SUBMITTED("Submitted"),
    @XmlEnumValue("Under Review")
    UNDER_REVIEW("Under Review"),
    @XmlEnumValue("Accepted")
    ACCEPTED("Accepted"),
    @XmlEnumValue("Not Accepted")
    NOT_ACCEPTED("Not Accepted"),
    @XmlEnumValue("Not Applicable")
    NOT_APPLICABLE("Not Applicable");
    private final String value;

    SubmittalActionType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static SubmittalActionType fromValue(String v) {
        for (SubmittalActionType c: SubmittalActionType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
